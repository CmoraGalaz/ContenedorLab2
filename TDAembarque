#include <stdio.h>
#include <stdlib.h>

// Estructura para representar una carga
// Estructura para representar una carga de embarque
typedef struct {
    int tiempoCarga;
    int numeroCarga;
} CargaEmbarque;

// Estructura para representar un nodo de la cola enlazada
typedef struct NodoEmbarque {
    CargaEmbarque carga;
    struct NodoEmbarque* siguiente;
} NodoEmbarque;

// Estructura para representar la cola enlazada
typedef struct {
    NodoEmbarque* frente;
    NodoEmbarque* final;
} ColaEmbarque;

void inicializarColaEmbarque(ColaEmbarque* colaEmbarque) {
    colaEmbarque->frente = NULL;
    colaEmbarque->final = NULL;
}
// Función para verificar si la cola está vacía

int esColaVaciaEmbarque(ColaEmbarque* cola){
	if (cola->frente == 0)
		return 1;
	return 0;
	}

// Función para agregar una carga a la cola
void agregarAlEmbarque(ColaEmbarque* cola, CargaEmbarque carga) {
    NodoEmbarque* nuevoNodo = (NodoEmbarque*)malloc(sizeof(NodoEmbarque));
    nuevoNodo->carga = carga;
    nuevoNodo->siguiente = NULL;

    if (esColaVaciaEmbarque(cola)==1) {
        cola->frente = nuevoNodo;
        cola->final = nuevoNodo;
    } else {
        cola->final->siguiente = nuevoNodo;
        cola->final = nuevoNodo;
    }
}

void imprimirColaEmbarque(ColaEmbarque* cola) {
    NodoEmbarque* actual = cola->frente;
 printf(" \n -----------------------------------------------------------------");
    printf(" \n Elementos En Mi Embarcacion: ");

    while (actual != NULL) {
        printf("\n Tiempo De Embarcacion = %d ", actual->carga.tiempoCarga);
        printf(" || Numero de Carga De Embarque= %d", actual->carga.numeroCarga);
        actual = actual->siguiente;
    }
 printf(" \n -----------------------------------------------------------------");
    printf("\n");
}

